<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Self-Hosted on Kyle Roth</title><link>https://kylrth.com/tags/self-hosted/</link><description>Recent content in Self-Hosted on Kyle Roth</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 17 Apr 2025 13:19:47 -0400</lastBuildDate><atom:link href="https://kylrth.com/tags/self-hosted/index.xml" rel="self" type="application/rss+xml"/><item><title>avatarify</title><link>https://kylrth.com/post/avatarify/</link><pubDate>Wed, 24 Nov 2021 11:58:34 -0500</pubDate><guid>https://kylrth.com/post/avatarify/</guid><description>&lt;p>&lt;a href="https://github.com/alievk/avatarify-python">Avatarify&lt;/a> is a cool project that lets you create a relatively realistic avatar that you can use during video meetings. It works by creating a fake video input device and passing your video input through a neural network in PyTorch. My laptop doesn&amp;rsquo;t have a GPU, so I used the server/client setup.&lt;/p>
&lt;h2 id="setting-up-the-server">setting up the server &lt;a class="header-link" href="#setting-up-the-server">&lt;svg class="c-links__icon">&lt;title>permalink&lt;/title>&lt;use xlink:href="#icon-permalink">&lt;/use>&lt;/svg>&lt;/a>&lt;/h2>
&lt;p>Be sure you&amp;rsquo;ve installed the Nvidia Docker runtime so that the Docker container can use the GPU. You can see how I did that &lt;a href="https://kylrth.com/post/jupyter-lab/">here&lt;/a>. Run the following on the server:&lt;/p></description></item><item><title>hosting my own web services</title><link>https://kylrth.com/post/self-hosting/</link><pubDate>Tue, 23 Nov 2021 07:57:00 -0500</pubDate><guid>https://kylrth.com/post/self-hosting/</guid><description>&lt;img src="spaceship.jpg" alt="hosting my own web services spaceship.jpg" class="img-zoomable">

&lt;p>I host several services on an Alienware gaming computer I keep at my apartment. (We call it the spaceship.) I originally got the computer so I could have a computer with a GPU for machine learning projects, but I&amp;rsquo;ve since started using this computer to host a bunch of different services. Here I&amp;rsquo;ve documented how I set up the server.&lt;/p>
&lt;h2 id="operating-system">operating system &lt;a class="header-link" href="#operating-system">&lt;svg class="c-links__icon">&lt;title>permalink&lt;/title>&lt;use xlink:href="#icon-permalink">&lt;/use>&lt;/svg>&lt;/a>&lt;/h2>
&lt;p>To keep things simple I use Ubuntu 20.04 LTS. Here&amp;rsquo;s a speedy way I&amp;rsquo;ve found to write installer ISOs to USB drives for installation:&lt;/p></description></item><item><title>Jupyter Lab Hub in Docker with Nvidia GPU support</title><link>https://kylrth.com/post/jupyter-lab/</link><pubDate>Tue, 19 Oct 2021 20:28:25 -0400</pubDate><guid>https://kylrth.com/post/jupyter-lab/</guid><description>&lt;p>This is how I set up my headless home server with a Jupyter Lab Docker container with an Nvidia GPU runtime. Login is handled by a GitHub OAuth application.&lt;/p>
&lt;h2 id="nvidia-drivers-and-the-container-runtime">Nvidia drivers and the container runtime &lt;a class="header-link" href="#nvidia-drivers-and-the-container-runtime">&lt;svg class="c-links__icon">&lt;title>permalink&lt;/title>&lt;use xlink:href="#icon-permalink">&lt;/use>&lt;/svg>&lt;/a>&lt;/h2>
&lt;p>First, check &lt;a href="https://docs.nvidia.com/cuda/archive/11.4.2/cuda-toolkit-release-notes/index.html">here&lt;/a> (replacing the CUDA version in the URL with your own) to see which Nvidia drivers you need for the CUDA toolkit version you want. I&amp;rsquo;m using CUDA 11.4.2, which means I need at least driver version 470.&lt;span class="sidenote-number">&lt;small class="sidenote">You can use &lt;code>sudo apt purge nvidia-*&lt;/code> to cleanly remove older drivers (or broken installs) before installing the desired version.&lt;/small>&lt;/span>&lt;/p></description></item><item><title>Minecraft in Docker</title><link>https://kylrth.com/post/minecraft/</link><pubDate>Mon, 02 Aug 2021 13:25:28 -0600</pubDate><guid>https://kylrth.com/post/minecraft/</guid><description>&lt;p>This guide shows how to host multiple Minecraft servers on a single machine with docker-compose.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>mkdir minecraft_server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd minecraft_server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir data/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget /post/minecraft/docker-compose.yml
 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -O docker-compose.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This docker-compose setup uses itzg&amp;rsquo;s Docker image, which you see further documentation for &lt;a href="https://github.com/itzg/docker-minecraft-server">here&lt;/a>.&lt;/p>
&lt;p>If you&amp;rsquo;re moving from a vanilla Minecraft world, do the following to get the different world directories in the right position:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>cp -r &lt;span style="color:#e6db74">${&lt;/span>OLD&lt;span style="color:#e6db74">}&lt;/span>/world data/server/world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir data/server/world_&lt;span style="color:#f92672">{&lt;/span>nether,the_end&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv data/server/world/DIM-1 data/server/world_nether/DIM-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv data/server/world/DIM1 data/server/world_the_end/DIM1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here&amp;rsquo;s the map from vanilla Minecraft directories to Spigot directories (which is what itzg&amp;rsquo;s container uses):&lt;/p></description></item><item><title>Matrix setup with Synapse, Postgres, Maubot, and matrix-registration</title><link>https://kylrth.com/post/matrix-setup/</link><pubDate>Mon, 02 Aug 2021 10:30:00 -0600</pubDate><guid>https://kylrth.com/post/matrix-setup/</guid><description>&lt;p>This is how I set up my own &lt;a href="https://matrix.org">Matrix&lt;/a> server with Docker.&lt;span class="sidenote-number">&lt;small class="sidenote">These instructions were originally for ARM, back when I ran this server on a Raspberry Pi. Unfortunately, the Matrix community stopped releasing ARM images, so the latest version that will work on ARM without QEMU is v1.26.0, which is very old now. These instructions have been updated to use &lt;code>amd64&lt;/code> images, but I&amp;rsquo;ll preserve the references to ARM images as comments. If you&amp;rsquo;re going to work from a Pi, be sure to switch it to run in 64-bit mode for optimal performance: &lt;code>echo 'arm_64bit=1' | sudo tee -a /boot/config.txt &amp;amp;&amp;amp; sudo systemctl reboot&lt;/code>.&lt;/small>&lt;/span>
There is an &lt;a href="https://github.com/spantaleev/matrix-docker-ansible-deploy">Ansible playbook&lt;/a> that&amp;rsquo;s quite popular, but I host a lot of other services with Docker on the same server and I wanted to continue managing all of them together, just with &lt;code>docker-compose&lt;/code>.&lt;/p></description></item><item><title>I really just want to edit and compile my LaTeX files in VS Code</title><link>https://kylrth.com/post/latex-vscode/</link><pubDate>Mon, 12 Jul 2021 21:43:47 -0600</pubDate><guid>https://kylrth.com/post/latex-vscode/</guid><description>&lt;p>LaTeX has a ton of different flavors, releases, and installations: &lt;a href="https://en.wikipedia.org/wiki/MacTeX">MacTeX&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/MiKTeX">MiKTeX&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/TeXworks">TeXworks&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/XeTeX">XeTeX&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/PdfTeX">pdfTeX&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/LuaTeX">LuaTeX&lt;/a>&amp;hellip; If you&amp;rsquo;re using Linux and just want to edit LaTeX files in Visual Studio Code and have them automatically rendered as PDFs, follow these instructions:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>On Arch-based distros, install the packages listed &lt;a href="https://wiki.archlinux.org/title/TeX_Live">here&lt;/a>. On Debian-based systems, &lt;code>sudo apt install texlive&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install some Perl dependencies:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo cpan Log::Log4perl Log::LogDispatch Log::Dispatch::File YAML::Tiny File::HomeDir
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>If you want to use FontAwesome on Arch-based systems, install the &lt;code>oft-font-awesome&lt;/code> package and then do the following (&lt;a href="https://wiki.archlinux.org/title/TeX_Live#Making_fonts_available_to_Fontconfig">source&lt;/a>):&lt;/p></description></item><item><title>using Matrix</title><link>https://kylrth.com/post/matrix-registration/</link><pubDate>Sun, 02 Feb 2020 12:34:56 -0700</pubDate><guid>https://kylrth.com/post/matrix-registration/</guid><description>&lt;p>Matrix is a &lt;em>federated&lt;/em>, open source chat system. Federation means that people can message each other across different servers, like in the image below. In that way, it works sort of like email: even though you may use &lt;code>you@gmail.com&lt;/code> and I might use &lt;code>me@kylrth.com&lt;/code>, we can still write each other emails.&lt;/p>
&lt;img src="federation.png" alt="using Matrix federation.png" class="img-zoomable">

&lt;p>In our case, I host the server at matrix.kylrth.com, and you and I can connect to it with various &lt;a href="https://matrix.org/ecosystem/clients/">clients&lt;/a>. We can write each other messages, but we can also communicate with people on other Matrix servers.&lt;span class="sidenote-number">&lt;small class="sidenote">There are a ton of cool features to Matrix, such as &lt;a href="https://matrix.org/bridges/">bridging&lt;/a>, voice and video calls, and encryption. You can read a more extensive beginner&amp;rsquo;s guide to Matrix &lt;a href="https://joinmatrix.org/">here&lt;/a>. Also check out the Matrix &lt;a href="https://matrix.org">website&lt;/a>.&lt;/small>&lt;/span>&lt;/p></description></item></channel></rss>